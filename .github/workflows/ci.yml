name: Java CI

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:latest
        ports:
          - 3306:3306
        options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: example
          MYSQL_DATABASE: acmeshop
          MYSQL_USER: root
          MYSQL_PASSWORD: example

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Copy initialization script
        run: |
          docker cp init.sql $(docker ps -q --filter "ancestor=mariadb:latest"):/docker-entrypoint-initdb.d/

      - name: Wait for MariaDB to be ready
        run: |
          until mysqladmin ping -h "127.0.0.1" -u root -pexample --silent; do
            echo 'waiting for mariadb to be ready...'
            sleep 3
          done

      - name: Print MariaDB logs
        run: docker logs $(docker ps -q --filter "ancestor=mariadb:latest")

      - name: Build with Gradle
        run: ./gradlew build -x test --no-daemon -Pprofile=test -Dspring.profiles.active=test

      - name: Run tests
        run: ./gradlew test --no-daemon -Pprofile=test -Dspring.profiles.active=test
